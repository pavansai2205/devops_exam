{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\SV\\\\Frontend\\\\src\\\\components\\\\Cart\\\\CartContext.jsx\",\n  _s = $RefreshSig$();\n// import React, { createContext, useState } from 'react';\n\n// // Create Cart Context\n// export const CartContext = createContext();\n\n// // Cart Provider component\n// const CartProvider = ({ children }) => {\n//   const [cart, setCart] = useState([]);\n\n//   // Add item to the cart\n//   const addToCart = (product) => {\n//     setCart((prevCart) => {\n//       const existingProduct = prevCart.find(item => item.id === product.id);\n//       if (existingProduct) {\n//         return prevCart.map(item => \n//           item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\n//         );\n//       } else {\n//         return [...prevCart, { ...product, quantity: 1 }];\n//       }\n//     });\n//   };\n\n//   // Remove item from the cart\n//   const removeFromCart = (product) => {\n//     setCart((prevCart) => prevCart.filter(item => item.id !== product.id));\n//   };\n\n//   // Update quantity of an item in the cart\n//   const updateQuantity = (product, newQuantity) => {\n//     setCart((prevCart) => {\n//       if (newQuantity <= 0) {\n//         return prevCart.filter(item => item.id !== product.id); // Remove item if quantity is 0 or negative\n//       }\n//       return prevCart.map(item =>\n//         item.id === product.id ? { ...item, quantity: newQuantity } : item\n//       );\n//     });\n//   };\n\n//   // Clear the cart\n//   const clearCart = () => {\n//     setCart([]);\n//   };\n\n//   return (\n//     <CartContext.Provider value={{ cart, addToCart, removeFromCart, updateQuantity, clearCart }}>\n//       {children}\n//     </CartContext.Provider>\n//   );\n// };\n\n// export default CartProvider;\n\nimport React, { createContext, useState } from 'react';\n\n// Create Cart Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// Cart Provider component\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n\n  // Add item to the cart\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existingProduct = prevCart.find(item => item.id === product.id);\n      if (existingProduct) {\n        return prevCart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...prevCart, {\n          ...product,\n          quantity: 1,\n          size: ''\n        }]; // Default size is empty\n      }\n    });\n  };\n\n  // Remove item from the cart\n  const removeFromCart = product => {\n    setCart(prevCart => prevCart.filter(item => item.id !== product.id));\n  };\n\n  // Update quantity of an item in the cart\n  const updateQuantity = (product, newQuantity) => {\n    setCart(prevCart => {\n      if (newQuantity <= 0) {\n        return prevCart.filter(item => item.id !== product.id); // Remove item if quantity is 0 or negative\n      }\n      return prevCart.map(item => item.id === product.id ? {\n        ...item,\n        quantity: newQuantity\n      } : item);\n    });\n  };\n\n  // Update size of an item in the cart\n  const updateSize = (product, newSize) => {\n    setCart(prevCart => prevCart.map(item => item.id === product.id ? {\n      ...item,\n      size: newSize\n    } : item));\n  };\n\n  // Clear the cart\n  const clearCart = () => {\n    setCart([]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      updateSize,\n      // Added to context\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","addToCart","product","prevCart","existingProduct","find","item","id","map","quantity","size","removeFromCart","filter","updateQuantity","newQuantity","updateSize","newSize","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/SV/Frontend/src/components/Cart/CartContext.jsx"],"sourcesContent":["// import React, { createContext, useState } from 'react';\r\n\r\n// // Create Cart Context\r\n// export const CartContext = createContext();\r\n\r\n// // Cart Provider component\r\n// const CartProvider = ({ children }) => {\r\n//   const [cart, setCart] = useState([]);\r\n\r\n//   // Add item to the cart\r\n//   const addToCart = (product) => {\r\n//     setCart((prevCart) => {\r\n//       const existingProduct = prevCart.find(item => item.id === product.id);\r\n//       if (existingProduct) {\r\n//         return prevCart.map(item => \r\n//           item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\r\n//         );\r\n//       } else {\r\n//         return [...prevCart, { ...product, quantity: 1 }];\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   // Remove item from the cart\r\n//   const removeFromCart = (product) => {\r\n//     setCart((prevCart) => prevCart.filter(item => item.id !== product.id));\r\n//   };\r\n\r\n//   // Update quantity of an item in the cart\r\n//   const updateQuantity = (product, newQuantity) => {\r\n//     setCart((prevCart) => {\r\n//       if (newQuantity <= 0) {\r\n//         return prevCart.filter(item => item.id !== product.id); // Remove item if quantity is 0 or negative\r\n//       }\r\n//       return prevCart.map(item =>\r\n//         item.id === product.id ? { ...item, quantity: newQuantity } : item\r\n//       );\r\n//     });\r\n//   };\r\n\r\n//   // Clear the cart\r\n//   const clearCart = () => {\r\n//     setCart([]);\r\n//   };\r\n\r\n//   return (\r\n//     <CartContext.Provider value={{ cart, addToCart, removeFromCart, updateQuantity, clearCart }}>\r\n//       {children}\r\n//     </CartContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default CartProvider;\r\n\r\nimport React, { createContext, useState } from 'react';\r\n\r\n// Create Cart Context\r\nexport const CartContext = createContext();\r\n\r\n// Cart Provider component\r\nconst CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // Add item to the cart\r\n  const addToCart = (product) => {\r\n    setCart((prevCart) => {\r\n      const existingProduct = prevCart.find(item => item.id === product.id);\r\n      if (existingProduct) {\r\n        return prevCart.map(item =>\r\n          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\r\n        );\r\n      } else {\r\n        return [...prevCart, { ...product, quantity: 1, size: '' }]; // Default size is empty\r\n      }\r\n    });\r\n  };\r\n\r\n  // Remove item from the cart\r\n  const removeFromCart = (product) => {\r\n    setCart((prevCart) => prevCart.filter(item => item.id !== product.id));\r\n  };\r\n\r\n  // Update quantity of an item in the cart\r\n  const updateQuantity = (product, newQuantity) => {\r\n    setCart((prevCart) => {\r\n      if (newQuantity <= 0) {\r\n        return prevCart.filter(item => item.id !== product.id); // Remove item if quantity is 0 or negative\r\n      }\r\n      return prevCart.map(item =>\r\n        item.id === product.id ? { ...item, quantity: newQuantity } : item\r\n      );\r\n    });\r\n  };\r\n\r\n  // Update size of an item in the cart\r\n  const updateSize = (product, newSize) => {\r\n    setCart((prevCart) =>\r\n      prevCart.map(item =>\r\n        item.id === product.id ? { ...item, size: newSize } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // Clear the cart\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        updateSize, // Added to context\r\n        clearCart,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}